package UI;

import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SearchUI extends javax.swing.JInternalFrame {

    static final String JDBC_DRIVER = "org.apache.derby.jdbc.ClientDriver";
    static final String DB_URL = "jdbc:derby://localhost:1527/ProyectoDB";

    static final String USER = "";
    static final String PASS = "";

    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pt = null;
    ResultSet rs = null;

    private enum Severity {
        LOW, MID, HIGH;
    }

    public SearchUI() {
        initComponents();
        try {
            Class.forName(JDBC_DRIVER);
            System.out.println("Connecting to database(newUser)...");
            conn = DriverManager.getConnection(DB_URL);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error" + ex.getMessage());
        }
        loaddata();
    }

    private void findrecord() {
        String sortedBy = this.cmbParameter.getSelectedItem().toString();
        DefaultTableModel dtm = new DefaultTableModel();
        ResultSetMetaData meta;
        try {
            pt = conn.prepareStatement("Select * from INCIDENT where SEVERITY = ? ");
            pt.setString(1, sortedBy);
            rs = pt.executeQuery();
            meta = rs.getMetaData();

            int numberOfColumns = meta.getColumnCount();
            for (int i = 1; i <= numberOfColumns; i++) {
                dtm.addColumn(meta.getColumnName(i));
            }
            while (rs.next()) {

                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i] = rs.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }
            this.tblIncidents.setModel(dtm);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error" + ex.getMessage());
        }
    }
    
    private void loaddata() {
        System.out.println("Creating statement...");
        DefaultTableModel dtm = new DefaultTableModel();

        try {
            stmt = conn.createStatement(rs.TYPE_SCROLL_INSENSITIVE, rs.CONCUR_READ_ONLY);
            String sql;
            sql = "Select * from INCIDENT";
            rs = stmt.executeQuery(sql);
            ResultSetMetaData meta = rs.getMetaData();
            int numberOfColumns = meta.getColumnCount();

            for (int i = 1; i <= numberOfColumns; i++) {
                dtm.addColumn(meta.getColumnName(i));
            }
         
            while (rs.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; ++i) {
                    rowData[i] = rs.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }
            this.tblIncidents.setModel(dtm);

            rs.first();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error" + ex.getMessage());
        }
    }
    
    private void deletedata(String titulo) {
        try {
            pt = conn.prepareStatement("delete from INCIDENT where TITLE = ? ");
            pt.setString(1, titulo);
            pt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Incidente resuelto");
            this.loaddata();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error" + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbParameter = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIncidents = new javax.swing.JTable();
        btnFind = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnResolver = new javax.swing.JButton();

        setClosable(true);
        setTitle("Search");
        setToolTipText("");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jLabel1.setText("Severity:");

        cmbParameter.setModel(new DefaultComboBoxModel<>(Severity.values()));

        tblIncidents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblIncidents.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(tblIncidents);

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        jButton1.setText("All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnResolver.setText("Solved");
        btnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnResolver)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(cmbParameter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbParameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResolver)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        findrecord();
    }//GEN-LAST:event_btnFindActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loaddata();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolverActionPerformed
        
        
        int row = tblIncidents.getSelectedRow();
        int column = tblIncidents.getSelectedColumn();
        String title = (String) tblIncidents.getValueAt(row, column);
        deletedata(title);
    }//GEN-LAST:event_btnResolverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnResolver;
    private javax.swing.JComboBox<Severity> cmbParameter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIncidents;
    // End of variables declaration//GEN-END:variables
}
